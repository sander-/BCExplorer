@model AddressViewModel
@{
    ViewData["Title"] = "Address";
}

@await Html.PartialAsync("_SearchPartial")

<div class="row mt-2">
    <div class="col">
        <h1>Gravium Address</h1>
        <small>@Model.Address.Id</small>
    </div>
</div>

<div class="row mt-2">
    <div class="col">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Balance
                    </th>
                    <th>
                        Total received
                    </th>
                    <th>
                        Total sent
                    </th>
                    <th>
                        Total transactions
                    </th>
                    <th>
                        Last modified in block
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Model.Address.Balance
                    </td>
                    <td>
                        @Model.TotalReceived
                    </td>
                    <td>
                        @Model.TotalSent
                    </td>
                    <td>
                        @Model.Address.TotalTransactions
                    </td>
                    <td>
                        @Model.Address.LastModifiedBlockHeight
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<div class="row mt-2">
    <div class="col">
        <h2>Transactions of address</h2>

        <table class="table">
            <thead>
                <tr>
                    <th>Timestamp</th>
                    <th>Hash</th>
                    <th>Amount</th>
                    <th>Balance</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var atx in Model.AddressTransactions.OrderByDescending(p => p.Transaction.Time))
                {
                    var transactionType = atx.TotalOut > atx.TotalIn ? ">" : "<";
                    var amountClass = (atx.TotalIn - atx.TotalOut) < 0 ? "alert-danger" : "alert-success";
                    <tr>
                        <td>@atx.Transaction.Time</td>
                        <td>@atx.Transaction.TransactionId</td>
                        <td class="@amountClass">@(atx.TotalIn - atx.TotalOut)</td>
                        <td>@atx.Balance</td>
                        <td>
                            @if (transactionType == ">")
                            {
                                <i title="Outgoing Transaction" class="fas fa-sign-out-alt"></i>
                            }
                            else
                            {
                                <i title="Incoming Transaction" class="fas fa-sign-in-alt"></i>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

</div>